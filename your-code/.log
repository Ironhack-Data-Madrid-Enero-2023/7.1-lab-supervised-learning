2023-02-27 14:00:33,668 [6410] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-02-27 14:00:33,668 [6410] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-02-27 14:00:33,668 [6410] INFO     root:247: [JupyterRequire] Initializing comms.
2023-02-27 14:00:33,670 [6410] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-02-27 14:00:33,670 [6410] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-02-27 14:00:33,670 [6410] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-02-27 14:00:34,185 [6410] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-02-27 14:00:34,186 [6410] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-02-27 14:00:34,186 [6410] INFO     root:247: [JupyterRequire] Initializing comms.
2023-02-27 14:00:34,188 [6410] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-02-27 14:00:34,188 [6410] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-02-27 14:00:34,188 [6410] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-02-27 15:02:42,778 [6410] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: /Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data
2023-02-27 15:02:42,784 [6410] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=/Users/ruben/.matplotlib
2023-02-27 15:02:42,787 [6410] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-02-27 15:02:42,787 [6410] DEBUG    matplotlib:1446: [JupyterRequire] platform is darwin
2023-02-27 15:02:42,788 [6410] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'posix', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'mpl_toolkits', 'google', 'PyObjCTools', 'ruamel', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'pwd', 'grp', '_posixsubprocess', 'select', 'math', 'selectors', 'subprocess', 'jupyter_client._version', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'copy', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'concurrent', 'traceback', '_string', 'string', 'atexit', 'logging', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'array', 'socket', '_ssl', '_struct', 'struct', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', '_queue', 'queue', 'platform', '_ctypes', 'ctypes._endian', 'ctypes', 'zmq.backend.select', '_cython_0_29_30', 'cython_runtime', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.message', '_bisect', 'bisect', '_random', '_sha512', 'random', '_compat_pickle', '_pickle', 'pickle', 'zmq.constants', 'zmq.backend.cython.socket', 'zmq.backend.cython._device', 'zmq.backend.cython._poll', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython._version', 'zmq.backend.cython.error', 'zmq.backend.cython.utils', 'zmq.backend.cython', 'zmq.backend', 'zmq.sugar.attrsettr', 'zmq._typing', 'zmq.utils', 'zmq.utils.jsonapi', 'zmq.sugar.poll', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'zmq._future', 'zmq.asyncio', 'jupyter_client.channelsabc', '_hashlib', '_blake2', 'hashlib', 'hmac', 'pprint', '_datetime', 'datetime', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'traitlets.log', 'tornado', 'numbers', 'logging.handlers', 'html.entities', 'html', 'urllib', 'urllib.parse', 'zlib', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', '_curses', 'curses', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'jupyter_client.adapter', 'dateutil._version', 'dateutil', '__future__', 'locale', 'calendar', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.session', 'jupyter_client.channels', 'termios', 'getpass', 'jupyter_client.clientabc', 'fnmatch', 'glob', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'tempfile', 'jupyter_core.version', 'jupyter_core', 'ntpath', 'pathlib', 'jupyter_core.paths', 'jupyter_client.localinterfaces', 'jupyter_client.utils', 'jupyter_client.connect', 'jupyter_client.client', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'jupyter_client.launcher', '_uuid', 'uuid', 'jupyter_client.managerabc', 'zipfile', 'configparser', 'entrypoints', 'jupyter_client.provisioning.provisioner_base', 'jupyter_client.provisioning.factory', 'jupyter_client.provisioning.local_provisioner', 'jupyter_client.provisioning', 'jupyter_client.kernelspec', 'jupyter_client.manager', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', '_sysconfigdata__darwin_darwin', '_osx_support', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'tty', 'pty', 'fcntl', 'resource', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', '_scproxy', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'ipykernel.control', 'ipykernel.heartbeat', 'ipykernel.iostream', 'IPython.utils.tokenutil', 'ipykernel.jsonutil', 'psutil._common', 'psutil._compat', 'psutil._psposix', 'psutil._psutil_osx', 'psutil._psutil_posix', 'psutil._psosx', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing.util', 'pkg_resources._vendor.pyparsing.unicode', 'pkg_resources._vendor.pyparsing.exceptions', 'pkg_resources._vendor.pyparsing.actions', 'pkg_resources._vendor.pyparsing.results', 'pkg_resources._vendor.pyparsing.core', 'pkg_resources._vendor.pyparsing.helpers', 'pkg_resources._vendor.pyparsing.testing', 'pkg_resources._vendor.pyparsing.common', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'ipykernel.eventloops', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'faulthandler', 'IPython.core.completerlib', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.functools', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'setuptools.msvc', 'setuptools', 'distutils', 'distutils.version', 'ctypes.macholib', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'ctypes.macholib.dyld', 'ctypes.util', 'appnope._nope', 'appnope', 'storemagic', 'logging.config', 'syslog', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'jupyter_require', 'matplotlib_inline', 'matplotlib_inline.backend_inline', 'matplotlib', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat._pep440', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_32', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver._cext', 'kiwisolver']
2023-02-27 15:02:42,836 [6410] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=/Users/ruben/.matplotlib
2023-02-27 15:02:42,840 [6410] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from /Users/ruben/.matplotlib/fontlist-v330.json
2023-02-27 15:02:43,469 [6410] DEBUG    matplotlib.pyplot:301: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-02-27 15:02:43,473 [6410] DEBUG    matplotlib.pyplot:301: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-02-27 15:02:43,915 [6410] INFO     numexpr.utils:160: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-02-27 15:22:22,827 [8039] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-02-27 15:22:22,828 [8039] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-02-27 15:22:22,829 [8039] INFO     root:247: [JupyterRequire] Initializing comms.
2023-02-27 15:22:22,831 [8039] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-02-27 15:22:22,831 [8039] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-02-27 15:22:22,832 [8039] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-02-27 15:26:37,153 [8039] DEBUG    matplotlib.pyplot:301: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-02-27 15:27:43,581 [8039] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-02-27 15:27:43,582 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,582 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,582 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,582 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,582 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,582 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,583 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,583 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,583 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,583 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,583 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.05
2023-02-27 15:27:43,583 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,583 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,583 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 2.335
2023-02-27 15:27:43,583 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,583 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,584 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,584 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,584 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,584 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,584 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.335
2023-02-27 15:27:43,584 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,584 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,584 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,584 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,584 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,584 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,584 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,584 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,585 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 2.05
2023-02-27 15:27:43,585 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,585 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,585 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,585 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,585 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,585 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,585 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,585 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,585 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,585 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,585 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,585 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,586 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,586 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,586 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luximri.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,586 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,586 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMMidyat.otf', name='Estrangelo Midyat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,586 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,586 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraMoBd.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,586 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,586 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMJerusalemItalic.otf', name='Serto Jerusalem', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,586 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2023-02-27 15:27:43,586 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,587 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,587 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,587 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMJerusalem.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,587 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxisb.ttf', name='Luxi Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,587 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,587 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,587 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,587 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,587 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMMardin.otf', name='Serto Mardin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,587 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,587 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,587 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,587 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,587 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,588 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,588 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraIt.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.05
2023-02-27 15:27:43,588 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,588 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,588 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,588 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2023-02-27 15:27:43,589 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,589 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,589 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,589 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luximr.ttf', name='Luxi Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,590 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,590 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMJerusalemOutline.otf', name='Serto Jerusalem Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,590 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMBatnan.otf', name='Serto Batnan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,590 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,590 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,590 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,590 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMEdessa.otf', name='Estrangelo Edessa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,590 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,590 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,590 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMUrhoyBold.otf', name='Serto Urhoy', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,590 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,590 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,590 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,591 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMEdessa.otf', name='Estrangelo Edessa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,591 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMTurAbdin.otf', name='Estrangelo TurAbdin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,591 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,591 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,591 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxirri.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,591 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/GohaTibebZemen.otf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,591 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-02-27 15:27:43,591 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,591 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,591 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,591 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMJerusalemItalic.otf', name='Serto Jerusalem', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,591 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,591 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,592 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,592 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luximri.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,592 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,592 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMMardinBold.otf', name='Serto Mardin', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,592 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,592 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,592 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,592 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,592 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,592 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxisbi.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,592 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,592 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,592 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraSeBd.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,593 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,593 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxisri.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,593 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,593 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,593 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxisri.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,593 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,593 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,593 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMMardinBold.otf', name='Serto Mardin', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,593 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,593 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMBatnanBold.otf', name='Serto Batnan', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,593 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,593 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,593 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMCtesiphon.otf', name='East Syriac Ctesiphon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,594 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,594 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,594 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,594 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,594 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
2023-02-27 15:27:43,594 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,594 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,594 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMMidyat.otf', name='Estrangelo Midyat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,594 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMJerusalem.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,594 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,594 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luximbi.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,594 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraIt.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.05
2023-02-27 15:27:43,594 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,594 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraBI.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.335
2023-02-27 15:27:43,594 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,595 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,595 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,595 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,595 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-02-27 15:27:43,595 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,595 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,595 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/Library/Fonts/frank.ttf', name='FrankRuehl', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,595 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,595 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,595 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,595 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,595 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,595 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,595 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,596 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMJerusalemBold.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,596 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,596 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,597 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,597 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMNisibinOutline.otf', name='Estrangelo Nisibin Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,597 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,597 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraSe.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,597 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMMardinBold.otf', name='Serto Mardin', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,597 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraMono.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,597 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMKharput.otf', name='Serto Kharput', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,597 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luximb.ttf', name='Luxi Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,597 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,598 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,598 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,598 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,598 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-02-27 15:27:43,598 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxirr.ttf', name='Luxi Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,598 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,599 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,599 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMKharput.otf', name='Serto Kharput', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,599 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,599 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMNisibinOutline.otf', name='Estrangelo Nisibin Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,599 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraSeBd.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,599 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,599 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxirb.ttf', name='Luxi Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,599 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,599 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,599 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,600 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,600 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,600 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxisb.ttf', name='Luxi Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,600 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,600 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,600 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,600 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,600 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/Vera.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.05
2023-02-27 15:27:43,600 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,600 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,601 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,601 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,601 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,601 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,601 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,601 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxisbi.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,601 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraBd.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.335
2023-02-27 15:27:43,601 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,602 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,602 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
2023-02-27 15:27:43,602 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,602 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,602 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxirb.ttf', name='Luxi Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,602 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,602 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxisr.ttf', name='Luxi Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,602 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,602 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,602 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,602 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMUrhoy.otf', name='Serto Urhoy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,602 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,602 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,602 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,603 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,603 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,603 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,603 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,603 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxisb.ttf', name='Luxi Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,603 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,603 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,603 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,604 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,604 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxirri.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,604 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,604 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,605 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMAdiabene.otf', name='East Syriac Adiabene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,605 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMBatnan.otf', name='Serto Batnan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,605 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,606 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,606 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMTalada.otf', name='Estrangelo Talada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,606 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,606 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,606 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMMardin.otf', name='Serto Mardin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,606 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,607 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,607 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,607 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraMoIt.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,607 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
2023-02-27 15:27:43,607 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,607 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,607 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraMono.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,607 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,607 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/GohaTibebZemen.otf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,607 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,608 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxirr.ttf', name='Luxi Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,608 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMAntioch.otf', name='Estrangelo Antioch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,608 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,608 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,608 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,608 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,608 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,608 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,608 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,608 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,608 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-02-27 15:27:43,609 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,609 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,609 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,609 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,609 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,609 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,609 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,609 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,609 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMNisibinOutline.otf', name='Estrangelo Nisibin Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,609 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,610 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,610 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,610 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,610 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxirb.ttf', name='Luxi Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,610 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMNisibin.otf', name='Estrangelo Nisibin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,610 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,610 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-02-27 15:27:43,610 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,610 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMMalankara.otf', name='Serto Malankara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,610 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,610 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/GohaTibebZemen.ttf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,610 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,610 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,611 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,611 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,611 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,611 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,611 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMAntioch.otf', name='Estrangelo Antioch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,611 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraMono.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,611 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,611 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,611 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,611 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMUrhoyBold.otf', name='Serto Urhoy', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,611 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,611 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxirbi.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,611 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,612 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,612 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,612 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMBatnan.otf', name='Serto Batnan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,612 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraMoBI.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,612 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,612 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,612 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,612 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMJerusalem.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,612 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,612 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,612 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luximr.ttf', name='Luxi Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,612 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,612 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,612 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,613 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,613 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,613 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,613 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,613 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,613 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,613 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,613 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,613 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,613 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luximbi.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,613 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,614 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,614 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,614 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,614 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,614 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,614 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,614 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMAdiabene.otf', name='East Syriac Adiabene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,614 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,614 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luximb.ttf', name='Luxi Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,614 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,614 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,614 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,614 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,614 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,615 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxirbi.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,615 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-02-27 15:27:43,615 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraSe.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,615 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,615 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,615 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,615 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,615 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,615 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,615 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,615 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,615 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraMoIt.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,615 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,615 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,615 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMQenNeshrin.otf', name='Estrangelo Quenneshrin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,616 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraBd.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.335
2023-02-27 15:27:43,616 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,616 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMMidyat.otf', name='Estrangelo Midyat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,616 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/GohaTibebZemen.ttf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,616 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraSeBd.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,616 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxirbi.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,616 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-02-27 15:27:43,616 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMTurAbdin.otf', name='Estrangelo TurAbdin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,616 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,616 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,616 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraMoIt.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,616 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,616 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,616 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,617 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,617 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,617 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMAntioch.otf', name='Estrangelo Antioch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,617 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-02-27 15:27:43,617 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,617 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,617 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,617 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,617 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,617 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,617 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,618 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,618 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMMardin.otf', name='Serto Mardin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,618 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,618 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,618 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-02-27 15:27:43,618 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraSe.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,618 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,618 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-02-27 15:27:43,618 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,618 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,618 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxisbi.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,618 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,618 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,619 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,619 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,619 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,619 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,619 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMEdessa.otf', name='Estrangelo Edessa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,619 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraBI.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.335
2023-02-27 15:27:43,619 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,620 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-02-27 15:27:43,620 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxisr.ttf', name='Luxi Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,620 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,620 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,620 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMMalankara.otf', name='Serto Malankara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,620 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,620 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,620 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMUrhoyBold.otf', name='Serto Urhoy', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,621 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,621 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxirr.ttf', name='Luxi Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,621 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,621 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxirri.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,621 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,621 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,621 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMJerusalemItalic.otf', name='Serto Jerusalem', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,621 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,621 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,621 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMJerusalemBold.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,621 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,621 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luximr.ttf', name='Luxi Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,621 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMUrhoy.otf', name='Serto Urhoy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,621 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,622 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,622 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,622 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,622 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,622 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,622 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,622 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,622 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMJerusalemBold.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,622 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,622 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraMoBd.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,622 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,622 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMNisibin.otf', name='Estrangelo Nisibin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,622 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,622 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMAdiabene.otf', name='East Syriac Adiabene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,622 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/Vera.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.05
2023-02-27 15:27:43,623 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luximb.ttf', name='Luxi Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,623 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,623 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,623 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,623 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,623 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,623 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,623 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,623 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,623 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,623 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,623 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,623 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,624 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMQenNeshrin.otf', name='Estrangelo Quenneshrin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,624 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,624 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,624 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,624 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMCtesiphon.otf', name='East Syriac Ctesiphon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,624 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,624 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,624 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,624 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/GohaTibebZemen.otf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,624 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,624 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/Vera.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.05
2023-02-27 15:27:43,624 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,624 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraMoBd.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,624 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,624 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,625 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,625 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxisr.ttf', name='Luxi Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,625 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,625 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,625 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMTalada.otf', name='Estrangelo Talada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,625 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMJerusalemOutline.otf', name='Serto Jerusalem Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,625 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luximbi.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,625 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-02-27 15:27:43,625 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,625 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-02-27 15:27:43,625 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,625 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,625 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,625 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,625 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,626 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraIt.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.05
2023-02-27 15:27:43,626 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,626 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMKharput.otf', name='Serto Kharput', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,626 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,626 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,626 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,626 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMMalankara.otf', name='Serto Malankara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,626 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,626 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMTurAbdin.otf', name='Estrangelo TurAbdin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,626 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2023-02-27 15:27:43,626 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMNisibin.otf', name='Estrangelo Nisibin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,626 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,626 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-02-27 15:27:43,626 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,627 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,627 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,627 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMTalada.otf', name='Estrangelo Talada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,627 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,627 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,627 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxisri.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,627 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraMoBI.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,627 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,627 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,628 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMUrhoy.otf', name='Serto Urhoy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,628 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,628 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraBd.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.335
2023-02-27 15:27:43,628 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,628 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMBatnanBold.otf', name='Serto Batnan', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,628 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-02-27 15:27:43,628 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,629 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/GohaTibebZemen.ttf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,629 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,629 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMBatnanBold.otf', name='Serto Batnan', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,629 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,629 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMCtesiphon.otf', name='East Syriac Ctesiphon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,629 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,629 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraMoBI.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,629 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,629 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,629 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,630 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraBI.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.335
2023-02-27 15:27:43,630 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,630 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,630 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMJerusalemOutline.otf', name='Serto Jerusalem Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,630 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMQenNeshrin.otf', name='Estrangelo Quenneshrin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,630 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,630 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,630 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,630 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,630 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luximri.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,630 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,630 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2023-02-27 15:27:43,631 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,631 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,631 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,631 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,631 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,631 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,631 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,631 [8039] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to Arial ('/System/Library/Fonts/Supplemental/Arial.ttf') with score of 0.050000.
2023-02-27 15:27:43,657 [8039] DEBUG    matplotlib.colorbar:871: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x7fd3b008c9d0>
2023-02-27 15:27:43,682 [8039] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=11.0.
2023-02-27 15:27:43,682 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,682 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,683 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,683 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,683 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,683 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,683 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,683 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,683 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,683 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,683 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.05
2023-02-27 15:27:43,683 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,683 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,683 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 2.335
2023-02-27 15:27:43,683 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,683 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,683 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,684 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,684 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,684 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,684 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.335
2023-02-27 15:27:43,684 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,684 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,684 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,684 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,684 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,684 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,684 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,684 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,684 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 2.05
2023-02-27 15:27:43,684 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,684 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,685 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,685 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,685 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,685 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,685 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,685 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,685 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,685 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,685 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,685 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,685 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,685 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,685 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luximri.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,685 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,685 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMMidyat.otf', name='Estrangelo Midyat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,686 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,686 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraMoBd.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,686 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,686 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMJerusalemItalic.otf', name='Serto Jerusalem', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,686 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2023-02-27 15:27:43,686 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,686 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,686 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,686 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMJerusalem.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,686 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxisb.ttf', name='Luxi Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,686 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,686 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,686 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,687 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,687 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMMardin.otf', name='Serto Mardin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,687 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,687 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,687 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,687 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,687 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,687 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,687 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraIt.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.05
2023-02-27 15:27:43,687 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,687 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,687 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,688 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2023-02-27 15:27:43,688 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,688 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,688 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,688 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luximr.ttf', name='Luxi Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,688 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,688 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMJerusalemOutline.otf', name='Serto Jerusalem Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,688 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMBatnan.otf', name='Serto Batnan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,688 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,688 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,688 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,688 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMEdessa.otf', name='Estrangelo Edessa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,688 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,689 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,689 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMUrhoyBold.otf', name='Serto Urhoy', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,689 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,689 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,689 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,689 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMEdessa.otf', name='Estrangelo Edessa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,689 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMTurAbdin.otf', name='Estrangelo TurAbdin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,689 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,689 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,689 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxirri.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,689 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/GohaTibebZemen.otf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,689 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-02-27 15:27:43,689 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,689 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,689 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,689 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMJerusalemItalic.otf', name='Serto Jerusalem', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,690 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,690 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,690 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,690 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luximri.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,690 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,690 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMMardinBold.otf', name='Serto Mardin', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,690 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,690 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,690 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,690 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,690 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,690 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxisbi.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,690 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,690 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,690 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraSeBd.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,691 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,691 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxisri.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,691 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,691 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,691 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxisri.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,691 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,691 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,691 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMMardinBold.otf', name='Serto Mardin', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,691 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,691 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMBatnanBold.otf', name='Serto Batnan', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,691 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,691 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,691 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMCtesiphon.otf', name='East Syriac Ctesiphon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,691 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,691 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,692 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,692 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,692 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
2023-02-27 15:27:43,692 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,692 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,692 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMMidyat.otf', name='Estrangelo Midyat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,692 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMJerusalem.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,692 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,692 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luximbi.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,692 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraIt.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.05
2023-02-27 15:27:43,692 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,692 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraBI.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.335
2023-02-27 15:27:43,692 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,692 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,692 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,693 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,693 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-02-27 15:27:43,693 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,693 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,693 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/Library/Fonts/frank.ttf', name='FrankRuehl', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,693 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,693 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,693 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,693 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,693 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,693 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,693 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,693 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMJerusalemBold.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,693 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,693 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,693 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,694 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMNisibinOutline.otf', name='Estrangelo Nisibin Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,694 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,694 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraSe.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,694 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMMardinBold.otf', name='Serto Mardin', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,694 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraMono.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,694 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMKharput.otf', name='Serto Kharput', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,694 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luximb.ttf', name='Luxi Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,694 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,694 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,694 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,694 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,694 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-02-27 15:27:43,694 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxirr.ttf', name='Luxi Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,694 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,694 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,695 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMKharput.otf', name='Serto Kharput', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,695 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,695 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMNisibinOutline.otf', name='Estrangelo Nisibin Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,695 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraSeBd.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,695 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,695 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxirb.ttf', name='Luxi Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,695 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,695 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,695 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,695 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,695 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,695 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxisb.ttf', name='Luxi Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,695 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,695 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,695 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,695 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,696 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/Vera.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.05
2023-02-27 15:27:43,696 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,696 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,696 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,696 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,696 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,696 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,696 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,696 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxisbi.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,696 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraBd.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.335
2023-02-27 15:27:43,696 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,696 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,696 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
2023-02-27 15:27:43,696 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,696 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,697 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxirb.ttf', name='Luxi Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,697 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,697 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxisr.ttf', name='Luxi Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,697 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,697 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,697 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,697 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMUrhoy.otf', name='Serto Urhoy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,697 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,697 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,697 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,697 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,697 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,697 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,697 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,697 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxisb.ttf', name='Luxi Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,698 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,698 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,698 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,698 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,698 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxirri.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,698 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,698 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,698 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMAdiabene.otf', name='East Syriac Adiabene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,698 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMBatnan.otf', name='Serto Batnan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,698 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,698 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,698 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMTalada.otf', name='Estrangelo Talada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,698 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,698 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,698 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMMardin.otf', name='Serto Mardin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,698 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,699 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,699 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,699 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraMoIt.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,699 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
2023-02-27 15:27:43,699 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,699 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,699 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraMono.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,699 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,699 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/GohaTibebZemen.otf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,699 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,699 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxirr.ttf', name='Luxi Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,699 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMAntioch.otf', name='Estrangelo Antioch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,699 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,699 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,699 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,700 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,700 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,700 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,700 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,700 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,700 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-02-27 15:27:43,700 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,700 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,700 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,700 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,700 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,700 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,700 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,700 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,700 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMNisibinOutline.otf', name='Estrangelo Nisibin Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,701 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,701 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,701 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,701 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,701 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxirb.ttf', name='Luxi Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,701 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMNisibin.otf', name='Estrangelo Nisibin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,701 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,701 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-02-27 15:27:43,701 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,701 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMMalankara.otf', name='Serto Malankara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,701 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,701 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/GohaTibebZemen.ttf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,701 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,701 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,701 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,702 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,702 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,702 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,702 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMAntioch.otf', name='Estrangelo Antioch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,702 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraMono.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,702 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,702 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,702 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,702 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMUrhoyBold.otf', name='Serto Urhoy', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,702 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,702 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxirbi.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,702 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,702 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,702 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,702 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMBatnan.otf', name='Serto Batnan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,702 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraMoBI.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,703 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,703 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,703 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,703 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMJerusalem.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,703 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,703 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,703 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luximr.ttf', name='Luxi Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,703 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,703 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,703 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,703 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,703 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,703 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,703 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,704 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,704 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,704 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,704 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,704 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,704 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luximbi.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,704 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,704 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,704 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,704 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,704 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,704 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,704 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,705 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMAdiabene.otf', name='East Syriac Adiabene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,705 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,705 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luximb.ttf', name='Luxi Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,705 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,705 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,705 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,705 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,705 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,705 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxirbi.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,705 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-02-27 15:27:43,705 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraSe.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,706 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,706 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,706 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,706 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,706 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,706 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,706 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,706 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,706 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraMoIt.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,706 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,706 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,706 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMQenNeshrin.otf', name='Estrangelo Quenneshrin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,707 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraBd.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.335
2023-02-27 15:27:43,707 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,707 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMMidyat.otf', name='Estrangelo Midyat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,707 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/GohaTibebZemen.ttf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,707 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraSeBd.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,707 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxirbi.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,707 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-02-27 15:27:43,707 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMTurAbdin.otf', name='Estrangelo TurAbdin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,707 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,707 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,707 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraMoIt.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,707 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,707 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,707 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,708 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,708 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,708 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMAntioch.otf', name='Estrangelo Antioch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,708 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-02-27 15:27:43,708 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,708 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,708 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,708 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,708 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,708 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,708 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,708 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,708 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMMardin.otf', name='Serto Mardin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,708 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,708 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,709 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-02-27 15:27:43,709 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraSe.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,709 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,709 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-02-27 15:27:43,709 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,709 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,709 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxisbi.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,709 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,709 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,709 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,709 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,709 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,709 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,709 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMEdessa.otf', name='Estrangelo Edessa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,709 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraBI.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.335
2023-02-27 15:27:43,709 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,710 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-02-27 15:27:43,710 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxisr.ttf', name='Luxi Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,710 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,710 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,710 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMMalankara.otf', name='Serto Malankara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,710 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,710 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,710 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMUrhoyBold.otf', name='Serto Urhoy', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,710 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,710 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxirr.ttf', name='Luxi Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,710 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,710 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxirri.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,710 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,710 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,710 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMJerusalemItalic.otf', name='Serto Jerusalem', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,711 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,711 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,711 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMJerusalemBold.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,711 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,711 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luximr.ttf', name='Luxi Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,711 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMUrhoy.otf', name='Serto Urhoy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,711 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,711 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,711 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,711 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,711 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,711 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,711 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,711 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,711 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMJerusalemBold.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,711 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,712 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraMoBd.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,712 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,712 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMNisibin.otf', name='Estrangelo Nisibin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,712 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,712 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMAdiabene.otf', name='East Syriac Adiabene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,712 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/Vera.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.05
2023-02-27 15:27:43,712 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luximb.ttf', name='Luxi Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,712 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,712 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,712 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,712 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,712 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,712 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,712 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,712 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,713 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,713 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,713 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,713 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,713 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMQenNeshrin.otf', name='Estrangelo Quenneshrin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,713 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,713 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,713 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,713 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMCtesiphon.otf', name='East Syriac Ctesiphon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,713 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,713 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,713 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,713 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/GohaTibebZemen.otf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,713 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,713 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/Vera.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.05
2023-02-27 15:27:43,713 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,714 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraMoBd.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,714 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,714 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,714 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,714 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxisr.ttf', name='Luxi Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,714 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,714 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,714 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMTalada.otf', name='Estrangelo Talada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,714 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMJerusalemOutline.otf', name='Serto Jerusalem Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,714 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luximbi.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,714 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-02-27 15:27:43,714 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,714 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-02-27 15:27:43,714 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,714 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,715 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,715 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,715 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,715 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraIt.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.05
2023-02-27 15:27:43,715 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,715 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMKharput.otf', name='Serto Kharput', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,715 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,715 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,715 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,715 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMMalankara.otf', name='Serto Malankara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,715 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,715 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMTurAbdin.otf', name='Estrangelo TurAbdin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,715 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2023-02-27 15:27:43,715 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMNisibin.otf', name='Estrangelo Nisibin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,715 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,716 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-02-27 15:27:43,716 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,716 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,716 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,716 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMTalada.otf', name='Estrangelo Talada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,716 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,716 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,716 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxisri.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,716 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraMoBI.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,716 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,716 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,716 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMUrhoy.otf', name='Serto Urhoy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,716 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,716 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraBd.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.335
2023-02-27 15:27:43,716 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,717 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMBatnanBold.otf', name='Serto Batnan', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,717 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-02-27 15:27:43,717 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,717 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/GohaTibebZemen.ttf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,717 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,717 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMBatnanBold.otf', name='Serto Batnan', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,717 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,717 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMCtesiphon.otf', name='East Syriac Ctesiphon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,717 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,717 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraMoBI.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,717 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,717 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,717 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,717 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraBI.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.335
2023-02-27 15:27:43,717 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,717 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,718 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMJerusalemOutline.otf', name='Serto Jerusalem Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,718 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMQenNeshrin.otf', name='Estrangelo Quenneshrin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,718 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,718 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,718 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,718 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,718 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luximri.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,718 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,718 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2023-02-27 15:27:43,718 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,718 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,718 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,718 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,718 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,718 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,718 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,719 [8039] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=11.0 to Arial ('/System/Library/Fonts/Supplemental/Arial.ttf') with score of 0.050000.
2023-02-27 15:27:43,765 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:27:43,831 [8039] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-02-27 15:27:43,831 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,831 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,832 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,832 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,832 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,832 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,832 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,832 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,832 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,832 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,832 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.05
2023-02-27 15:27:43,833 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,833 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,833 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 2.335
2023-02-27 15:27:43,833 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,833 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,833 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,834 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,834 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,834 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,834 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.335
2023-02-27 15:27:43,834 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,834 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,834 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,834 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,834 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,834 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,834 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,834 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,834 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 2.05
2023-02-27 15:27:43,834 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,835 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,835 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,835 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,835 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,835 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,835 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,835 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,835 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,835 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,835 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,835 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,835 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,835 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,835 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luximri.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,835 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,836 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMMidyat.otf', name='Estrangelo Midyat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,836 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,836 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraMoBd.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,836 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,836 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMJerusalemItalic.otf', name='Serto Jerusalem', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,836 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2023-02-27 15:27:43,836 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,837 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,837 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,837 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMJerusalem.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,837 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxisb.ttf', name='Luxi Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,837 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,837 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,837 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,837 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,837 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMMardin.otf', name='Serto Mardin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,837 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,837 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,837 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,837 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,837 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,837 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,838 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraIt.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.05
2023-02-27 15:27:43,838 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,838 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,838 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,838 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2023-02-27 15:27:43,838 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,838 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,838 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,838 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luximr.ttf', name='Luxi Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,838 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,838 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMJerusalemOutline.otf', name='Serto Jerusalem Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,838 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMBatnan.otf', name='Serto Batnan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,839 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,839 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,839 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,839 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMEdessa.otf', name='Estrangelo Edessa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,839 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,839 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,839 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMUrhoyBold.otf', name='Serto Urhoy', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,839 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,839 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,839 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,839 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMEdessa.otf', name='Estrangelo Edessa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,839 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMTurAbdin.otf', name='Estrangelo TurAbdin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,839 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,839 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,839 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxirri.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,840 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/GohaTibebZemen.otf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,840 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-02-27 15:27:43,840 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,840 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,840 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,840 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMJerusalemItalic.otf', name='Serto Jerusalem', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,840 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,840 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,840 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,840 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luximri.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,840 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,840 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMMardinBold.otf', name='Serto Mardin', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,840 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,840 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,840 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,841 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,841 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,841 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxisbi.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,841 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,841 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,841 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraSeBd.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,841 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,841 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxisri.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,841 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,841 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,841 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxisri.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,841 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,841 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,841 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMMardinBold.otf', name='Serto Mardin', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,841 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,841 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMBatnanBold.otf', name='Serto Batnan', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,842 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,842 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,842 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMCtesiphon.otf', name='East Syriac Ctesiphon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,842 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,842 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,842 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,842 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,842 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
2023-02-27 15:27:43,842 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,842 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,842 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMMidyat.otf', name='Estrangelo Midyat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,842 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMJerusalem.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,842 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,842 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luximbi.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,843 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraIt.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.05
2023-02-27 15:27:43,843 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,843 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraBI.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.335
2023-02-27 15:27:43,843 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,843 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,843 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,843 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,843 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-02-27 15:27:43,843 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,843 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,843 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/Library/Fonts/frank.ttf', name='FrankRuehl', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,843 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,843 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,843 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,843 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,844 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,844 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,844 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,844 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMJerusalemBold.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,844 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,844 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,844 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,844 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMNisibinOutline.otf', name='Estrangelo Nisibin Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,844 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,844 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraSe.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,844 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMMardinBold.otf', name='Serto Mardin', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,844 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraMono.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,844 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMKharput.otf', name='Serto Kharput', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,844 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luximb.ttf', name='Luxi Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,844 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,844 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,845 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,845 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,845 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-02-27 15:27:43,845 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxirr.ttf', name='Luxi Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,845 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,845 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,845 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMKharput.otf', name='Serto Kharput', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,845 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,845 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMNisibinOutline.otf', name='Estrangelo Nisibin Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,845 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraSeBd.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,845 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,845 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxirb.ttf', name='Luxi Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,845 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,845 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,845 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,845 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,846 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,846 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxisb.ttf', name='Luxi Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,846 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,846 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,846 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,846 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,846 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/Vera.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.05
2023-02-27 15:27:43,846 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,846 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,846 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,846 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,846 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,846 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,846 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,846 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxisbi.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,847 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraBd.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.335
2023-02-27 15:27:43,847 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,847 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,847 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
2023-02-27 15:27:43,847 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,847 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,847 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxirb.ttf', name='Luxi Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,847 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,847 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxisr.ttf', name='Luxi Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,847 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,847 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,847 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,847 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMUrhoy.otf', name='Serto Urhoy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,847 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,847 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,847 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,848 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,848 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,848 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,848 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,848 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxisb.ttf', name='Luxi Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,848 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,848 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,848 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,848 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,848 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxirri.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,848 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,848 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,848 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMAdiabene.otf', name='East Syriac Adiabene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,848 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMBatnan.otf', name='Serto Batnan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,848 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,848 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,849 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMTalada.otf', name='Estrangelo Talada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,849 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,849 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,849 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMMardin.otf', name='Serto Mardin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,849 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,849 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,849 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,849 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraMoIt.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,849 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
2023-02-27 15:27:43,849 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,849 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,849 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraMono.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,849 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,849 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/GohaTibebZemen.otf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,849 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,849 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxirr.ttf', name='Luxi Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,850 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMAntioch.otf', name='Estrangelo Antioch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,850 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,850 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,850 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,850 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,850 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,850 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,850 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,850 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,850 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-02-27 15:27:43,850 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,850 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,850 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,850 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,850 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,850 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,851 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,851 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,851 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMNisibinOutline.otf', name='Estrangelo Nisibin Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,851 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,851 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,851 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,851 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,851 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxirb.ttf', name='Luxi Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,851 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMNisibin.otf', name='Estrangelo Nisibin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,851 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,851 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-02-27 15:27:43,851 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,851 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMMalankara.otf', name='Serto Malankara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,851 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,851 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/GohaTibebZemen.ttf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,851 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,852 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,852 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,852 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,852 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,852 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,852 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMAntioch.otf', name='Estrangelo Antioch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,852 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraMono.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,852 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,852 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,852 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,852 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMUrhoyBold.otf', name='Serto Urhoy', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,852 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,852 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxirbi.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,852 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,853 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,853 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,853 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMBatnan.otf', name='Serto Batnan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,853 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraMoBI.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,853 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,853 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,853 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,853 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMJerusalem.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,853 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,853 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,853 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luximr.ttf', name='Luxi Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,854 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,854 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,854 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,854 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,854 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,854 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,854 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,854 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,854 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,854 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,854 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,855 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,855 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luximbi.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,855 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,855 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,855 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,855 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,855 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,855 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,855 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,855 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMAdiabene.otf', name='East Syriac Adiabene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,855 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,855 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luximb.ttf', name='Luxi Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,855 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,855 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,856 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,856 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,856 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,856 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxirbi.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,856 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-02-27 15:27:43,856 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraSe.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,856 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,856 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,856 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,856 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,856 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,857 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,857 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,857 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,857 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraMoIt.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,857 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,857 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,857 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMQenNeshrin.otf', name='Estrangelo Quenneshrin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,857 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraBd.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.335
2023-02-27 15:27:43,857 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,857 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMMidyat.otf', name='Estrangelo Midyat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,858 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/GohaTibebZemen.ttf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,858 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraSeBd.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,858 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxirbi.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,858 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-02-27 15:27:43,858 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMTurAbdin.otf', name='Estrangelo TurAbdin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,858 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,858 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,858 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraMoIt.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,858 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,858 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,858 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,858 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,858 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,858 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMAntioch.otf', name='Estrangelo Antioch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,859 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-02-27 15:27:43,859 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,859 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,859 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,859 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,859 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,859 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,859 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,859 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,859 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMMardin.otf', name='Serto Mardin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,859 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,859 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,859 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-02-27 15:27:43,859 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraSe.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,859 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,860 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-02-27 15:27:43,860 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,860 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,860 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxisbi.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,860 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,860 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,860 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,860 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,860 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,860 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,860 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMEdessa.otf', name='Estrangelo Edessa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,860 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraBI.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.335
2023-02-27 15:27:43,860 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,860 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-02-27 15:27:43,860 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxisr.ttf', name='Luxi Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,860 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,861 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,861 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMMalankara.otf', name='Serto Malankara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,861 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,861 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,861 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMUrhoyBold.otf', name='Serto Urhoy', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,861 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,861 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxirr.ttf', name='Luxi Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,861 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,861 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxirri.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,861 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,861 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,861 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMJerusalemItalic.otf', name='Serto Jerusalem', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,861 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,861 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,861 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMJerusalemBold.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,862 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,862 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luximr.ttf', name='Luxi Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,862 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMUrhoy.otf', name='Serto Urhoy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,862 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,862 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,862 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,862 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,862 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,862 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,862 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:27:43,862 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,862 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMJerusalemBold.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,862 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,862 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraMoBd.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,862 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,862 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMNisibin.otf', name='Estrangelo Nisibin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,863 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,863 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMAdiabene.otf', name='East Syriac Adiabene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,863 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/Vera.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.05
2023-02-27 15:27:43,863 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luximb.ttf', name='Luxi Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,863 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,863 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,863 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,863 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,863 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,863 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,863 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,863 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,863 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,863 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,863 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,863 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,864 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMQenNeshrin.otf', name='Estrangelo Quenneshrin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,864 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,864 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,864 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,864 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMCtesiphon.otf', name='East Syriac Ctesiphon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,864 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,864 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,864 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,864 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/GohaTibebZemen.otf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,864 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,864 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/Vera.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.05
2023-02-27 15:27:43,864 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,864 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraMoBd.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,864 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,864 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,865 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,865 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxisr.ttf', name='Luxi Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,865 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,865 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,865 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMTalada.otf', name='Estrangelo Talada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,865 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMJerusalemOutline.otf', name='Serto Jerusalem Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,865 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luximbi.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,865 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-02-27 15:27:43,865 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,865 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-02-27 15:27:43,865 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,865 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,865 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,865 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,865 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,865 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraIt.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.05
2023-02-27 15:27:43,866 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,866 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMKharput.otf', name='Serto Kharput', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,866 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,866 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,866 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,866 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMMalankara.otf', name='Serto Malankara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,866 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,866 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMTurAbdin.otf', name='Estrangelo TurAbdin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,866 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2023-02-27 15:27:43,866 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMNisibin.otf', name='Estrangelo Nisibin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,866 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,866 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-02-27 15:27:43,866 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,866 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,866 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,866 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMTalada.otf', name='Estrangelo Talada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,867 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,867 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,867 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxisri.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,867 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraMoBI.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,867 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,867 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,867 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMUrhoy.otf', name='Serto Urhoy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,867 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,867 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraBd.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.335
2023-02-27 15:27:43,867 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,867 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMBatnanBold.otf', name='Serto Batnan', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,867 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-02-27 15:27:43,867 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,867 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/GohaTibebZemen.ttf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,867 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,867 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMBatnanBold.otf', name='Serto Batnan', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,868 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:27:43,868 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMCtesiphon.otf', name='East Syriac Ctesiphon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,868 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,868 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraMoBI.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:27:43,868 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,868 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,868 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,868 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraBI.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.335
2023-02-27 15:27:43,868 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,868 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,868 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMJerusalemOutline.otf', name='Serto Jerusalem Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,868 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMQenNeshrin.otf', name='Estrangelo Quenneshrin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,868 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,868 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,868 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,868 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,869 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luximri.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,869 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,869 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2023-02-27 15:27:43,869 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,869 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,869 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:27:43,869 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,869 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,869 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:27:43,869 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:27:43,869 [8039] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to Arial ('/System/Library/Fonts/Supplemental/Arial.ttf') with score of 0.050000.
2023-02-27 15:27:43,909 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:27:43,978 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:27:44,078 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:27:44,208 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:02,987 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:02,989 [8039] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0.
2023-02-27 15:33:02,989 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,989 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,989 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:02,989 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:02,989 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,990 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:02,990 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,990 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,990 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,990 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,990 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.05
2023-02-27 15:33:02,990 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,990 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,990 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 2.335
2023-02-27 15:33:02,990 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:02,990 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,990 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:02,990 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:02,990 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,990 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,991 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.335
2023-02-27 15:33:02,991 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,991 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,991 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,991 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,991 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,991 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,991 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,991 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,991 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 2.05
2023-02-27 15:33:02,991 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:02,991 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,992 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:02,992 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,992 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,992 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,992 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,992 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,992 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,992 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,992 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,992 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,992 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,992 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:02,993 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luximri.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:02,993 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:02,993 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMMidyat.otf', name='Estrangelo Midyat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,993 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,993 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraMoBd.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,993 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,993 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMJerusalemItalic.otf', name='Serto Jerusalem', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:02,993 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2023-02-27 15:33:02,994 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:02,994 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,994 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:02,994 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMJerusalem.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,994 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxisb.ttf', name='Luxi Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,994 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,995 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,995 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,995 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,995 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMMardin.otf', name='Serto Mardin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,995 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,995 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,995 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,995 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,996 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,996 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,996 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraIt.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.05
2023-02-27 15:33:02,996 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,996 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,996 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,996 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2023-02-27 15:33:02,996 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,996 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,996 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,996 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luximr.ttf', name='Luxi Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,996 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,996 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMJerusalemOutline.otf', name='Serto Jerusalem Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,996 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMBatnan.otf', name='Serto Batnan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,997 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:33:02,997 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,997 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,997 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMEdessa.otf', name='Estrangelo Edessa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,997 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,997 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,997 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMUrhoyBold.otf', name='Serto Urhoy', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,997 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,997 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,997 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:02,997 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMEdessa.otf', name='Estrangelo Edessa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,997 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMTurAbdin.otf', name='Estrangelo TurAbdin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,997 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,997 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:02,997 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxirri.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:02,998 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/GohaTibebZemen.otf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:02,998 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-02-27 15:33:02,998 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,998 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,998 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,998 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMJerusalemItalic.otf', name='Serto Jerusalem', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:02,998 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:02,998 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,998 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,998 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luximri.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:02,998 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:02,998 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMMardinBold.otf', name='Serto Mardin', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,998 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,998 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,998 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,998 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,999 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,999 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxisbi.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:02,999 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,999 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,999 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraSeBd.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:02,999 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,999 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxisri.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:02,999 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,999 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:02,999 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxisri.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:02,999 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:02,999 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,000 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMMardinBold.otf', name='Serto Mardin', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,000 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,000 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMBatnanBold.otf', name='Serto Batnan', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,000 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,000 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,000 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMCtesiphon.otf', name='East Syriac Ctesiphon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,000 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,000 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,000 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,000 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,000 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
2023-02-27 15:33:03,000 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,000 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,000 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMMidyat.otf', name='Estrangelo Midyat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,000 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMJerusalem.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,001 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,001 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luximbi.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:03,001 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraIt.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.05
2023-02-27 15:33:03,001 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:03,001 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraBI.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.335
2023-02-27 15:33:03,001 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,001 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,001 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,001 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,001 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-02-27 15:33:03,001 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,001 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,001 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Users/ruben/Library/Fonts/frank.ttf', name='FrankRuehl', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,001 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,001 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,001 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,002 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,002 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:33:03,002 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,002 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,002 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMJerusalemBold.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,002 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,002 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,002 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,002 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMNisibinOutline.otf', name='Estrangelo Nisibin Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,002 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,002 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraSe.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,002 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMMardinBold.otf', name='Serto Mardin', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,002 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraMono.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,002 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMKharput.otf', name='Serto Kharput', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,002 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luximb.ttf', name='Luxi Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,002 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,003 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,003 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,003 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,003 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-02-27 15:33:03,003 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxirr.ttf', name='Luxi Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,003 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,003 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,003 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMKharput.otf', name='Serto Kharput', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,003 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,003 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMNisibinOutline.otf', name='Estrangelo Nisibin Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,003 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraSeBd.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,003 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,003 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxirb.ttf', name='Luxi Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,003 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:03,003 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,004 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,004 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,004 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,004 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxisb.ttf', name='Luxi Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,004 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,004 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,004 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,004 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,004 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/Vera.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.05
2023-02-27 15:33:03,004 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,005 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,005 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:33:03,005 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:03,005 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,005 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,005 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,005 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxisbi.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:03,005 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraBd.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.335
2023-02-27 15:33:03,005 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,006 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,006 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
2023-02-27 15:33:03,006 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,006 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,006 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxirb.ttf', name='Luxi Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,006 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,006 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxisr.ttf', name='Luxi Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,006 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,006 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,006 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:03,006 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMUrhoy.otf', name='Serto Urhoy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,006 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,006 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,006 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,007 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,007 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,007 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,007 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,007 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxisb.ttf', name='Luxi Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,007 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,007 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,007 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,007 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,007 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxirri.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:03,007 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,007 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,007 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMAdiabene.otf', name='East Syriac Adiabene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,007 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMBatnan.otf', name='Serto Batnan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,007 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,007 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,008 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMTalada.otf', name='Estrangelo Talada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,008 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:03,008 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,008 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMMardin.otf', name='Serto Mardin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,008 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,008 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,008 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,008 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraMoIt.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:03,008 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
2023-02-27 15:33:03,008 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:03,008 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,008 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraMono.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,008 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,008 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/GohaTibebZemen.otf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:03,008 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,009 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxirr.ttf', name='Luxi Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,009 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMAntioch.otf', name='Estrangelo Antioch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,009 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,009 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,009 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,009 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,009 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,009 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,009 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,009 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,009 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-02-27 15:33:03,010 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,010 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,010 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,010 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,010 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,010 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,010 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,010 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,010 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMNisibinOutline.otf', name='Estrangelo Nisibin Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,010 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,010 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,010 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,010 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,011 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxirb.ttf', name='Luxi Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,011 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMNisibin.otf', name='Estrangelo Nisibin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,011 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,011 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-02-27 15:33:03,011 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:03,011 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMMalankara.otf', name='Serto Malankara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,011 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,011 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/GohaTibebZemen.ttf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:03,011 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,011 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:03,011 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,011 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,012 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,012 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,012 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMAntioch.otf', name='Estrangelo Antioch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,012 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraMono.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,012 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,012 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,012 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,012 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMUrhoyBold.otf', name='Serto Urhoy', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,012 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,012 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxirbi.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:03,013 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,013 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,013 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:33:03,013 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMBatnan.otf', name='Serto Batnan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,013 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraMoBI.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:03,013 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,013 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,013 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:03,013 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMJerusalem.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,013 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,013 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,013 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luximr.ttf', name='Luxi Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,013 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,013 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,013 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,014 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,014 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,014 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,014 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,014 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,014 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,014 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,014 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,014 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:33:03,014 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luximbi.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:03,014 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,014 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,014 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,014 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,014 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,014 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,015 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,015 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMAdiabene.otf', name='East Syriac Adiabene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,015 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:03,015 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luximb.ttf', name='Luxi Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,015 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,015 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,015 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:03,015 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:33:03,015 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,015 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxirbi.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:03,015 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-02-27 15:33:03,015 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraSe.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,015 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,015 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,016 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,016 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,016 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,016 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,016 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,016 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,016 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraMoIt.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:03,016 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,016 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:03,016 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMQenNeshrin.otf', name='Estrangelo Quenneshrin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,016 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraBd.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.335
2023-02-27 15:33:03,016 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,016 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMMidyat.otf', name='Estrangelo Midyat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,016 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/GohaTibebZemen.ttf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:03,016 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraSeBd.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,016 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxirbi.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:03,017 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-02-27 15:33:03,017 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMTurAbdin.otf', name='Estrangelo TurAbdin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,017 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,017 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,017 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraMoIt.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:03,017 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:03,017 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,017 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,017 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,017 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,017 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMAntioch.otf', name='Estrangelo Antioch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,017 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-02-27 15:33:03,017 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,017 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,017 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,017 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,018 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:03,018 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:03,018 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,018 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,018 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMMardin.otf', name='Serto Mardin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,018 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,018 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,018 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-02-27 15:33:03,018 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraSe.ttf', name='Bitstream Vera Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,018 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:03,018 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-02-27 15:33:03,018 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,018 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,018 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxisbi.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:03,018 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,019 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,019 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,019 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:03,019 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,019 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,019 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMEdessa.otf', name='Estrangelo Edessa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,019 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraBI.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.335
2023-02-27 15:33:03,019 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,019 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-02-27 15:33:03,019 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luxisr.ttf', name='Luxi Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,019 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,019 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,019 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMMalankara.otf', name='Serto Malankara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,019 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,019 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,019 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMUrhoyBold.otf', name='Serto Urhoy', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,020 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,020 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxirr.ttf', name='Luxi Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,020 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,020 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luxirri.ttf', name='Luxi Serif', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:03,020 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,020 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,020 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMJerusalemItalic.otf', name='Serto Jerusalem', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:03,020 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,020 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,020 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMJerusalemBold.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,020 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,020 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/luximr.ttf', name='Luxi Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,020 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMUrhoy.otf', name='Serto Urhoy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,020 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:03,020 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,021 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,021 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,021 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,021 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,021 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-02-27 15:33:03,021 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,021 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMJerusalemBold.otf', name='Serto Jerusalem', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,021 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,021 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraMoBd.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,021 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,021 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMNisibin.otf', name='Estrangelo Nisibin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,021 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,021 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMAdiabene.otf', name='East Syriac Adiabene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,021 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/Vera.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.05
2023-02-27 15:33:03,021 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luximb.ttf', name='Luxi Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,021 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,022 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,022 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,022 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,022 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,022 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,022 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,022 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,022 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,022 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,022 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,022 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,022 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMQenNeshrin.otf', name='Estrangelo Quenneshrin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,022 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,022 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,022 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,022 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMCtesiphon.otf', name='East Syriac Ctesiphon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,023 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,023 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,023 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,023 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/GohaTibebZemen.otf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:03,023 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,023 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/Vera.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.05
2023-02-27 15:33:03,023 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,023 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraMoBd.ttf', name='Bitstream Vera Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,023 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,023 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,023 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:03,023 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxisr.ttf', name='Luxi Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,023 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,023 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,023 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMTalada.otf', name='Estrangelo Talada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,023 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMJerusalemOutline.otf', name='Serto Jerusalem Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,024 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luximbi.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:03,024 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-02-27 15:33:03,024 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,024 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-02-27 15:33:03,024 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,024 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,024 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,024 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,024 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,024 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraIt.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.05
2023-02-27 15:33:03,025 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:03,025 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMKharput.otf', name='Serto Kharput', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,025 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,025 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,025 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,025 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMMalankara.otf', name='Serto Malankara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,025 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,025 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMTurAbdin.otf', name='Estrangelo TurAbdin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,026 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2023-02-27 15:33:03,026 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMNisibin.otf', name='Estrangelo Nisibin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,026 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,026 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-02-27 15:33:03,026 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,026 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,026 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,026 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/OTF/SyrCOMTalada.otf', name='Estrangelo Talada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,026 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,026 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,026 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/luxisri.ttf', name='Luxi Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:03,026 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraMoBI.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:03,026 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,026 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:03,026 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMUrhoy.otf', name='Serto Urhoy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,027 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,027 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/VeraBd.ttf', name='Bitstream Vera Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.335
2023-02-27 15:33:03,027 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,027 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMBatnanBold.otf', name='Serto Batnan', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,027 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-02-27 15:33:03,027 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,027 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/GohaTibebZemen.ttf', name='Goha-Tibeb Zemen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:03,027 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,027 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMBatnanBold.otf', name='Serto Batnan', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,027 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-02-27 15:33:03,027 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/OTF/SyrCOMCtesiphon.otf', name='East Syriac Ctesiphon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,027 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,028 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/TTF/VeraMoBI.ttf', name='Bitstream Vera Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-02-27 15:33:03,028 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,028 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,028 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,028 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11R6/lib/X11/fonts/TTF/VeraBI.ttf', name='Bitstream Vera Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.335
2023-02-27 15:33:03,028 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,028 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,028 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMJerusalemOutline.otf', name='Serto Jerusalem Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,028 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/opt/X11/share/fonts/OTF/SyrCOMQenNeshrin.otf', name='Estrangelo Quenneshrin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,028 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,029 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,029 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,029 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,029 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/usr/X11/lib/X11/fonts/TTF/luximri.ttf', name='Luxi Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:03,029 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,029 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2023-02-27 15:33:03,029 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,029 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,029 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-02-27 15:33:03,029 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,029 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,029 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-02-27 15:33:03,029 [8039] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-02-27 15:33:03,029 [8039] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0 to Arial ('/System/Library/Fonts/Supplemental/Arial.ttf') with score of 0.050000.
2023-02-27 15:33:03,033 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,034 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,034 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,035 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,036 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,036 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,037 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,038 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,038 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,039 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,040 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,041 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,042 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,042 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,047 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,049 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,050 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,050 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,051 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,052 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,052 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,053 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,054 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,054 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,055 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,056 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,056 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,057 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,062 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,063 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,065 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,065 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,066 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,067 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,067 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,068 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,069 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,069 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,070 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,071 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,072 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,073 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,080 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,081 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,081 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,083 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,084 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,084 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,085 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,086 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,087 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,087 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,088 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,089 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,089 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,090 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,095 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,096 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,097 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,097 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,099 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,100 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,100 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,101 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,102 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,103 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,104 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,105 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,106 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,108 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,113 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,115 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,115 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,116 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,117 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,119 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,121 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,122 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,122 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,123 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,124 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,125 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,126 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,128 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,133 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,133 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,134 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,135 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,135 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,136 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,138 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,138 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,139 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,140 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,140 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,142 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,143 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,143 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,148 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,149 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,149 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,150 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,151 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,151 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,152 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,154 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,155 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,155 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,156 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,158 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,159 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,181 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,186 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,188 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,188 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,189 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,190 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,191 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,192 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,193 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,195 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,196 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,197 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,197 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,198 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,199 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,203 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,203 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,204 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,205 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,205 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,206 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,208 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,209 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,211 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,213 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,213 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,214 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,215 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,215 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,220 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,221 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,222 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,222 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,223 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,224 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,224 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,225 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,226 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,227 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,230 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,231 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,232 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,233 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,236 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,237 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,238 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,238 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,239 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,240 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,241 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,242 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,243 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,244 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,245 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,247 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,248 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,248 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,253 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,254 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,254 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,255 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,256 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,256 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,257 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,258 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,258 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,259 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,260 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,261 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,264 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,435 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,437 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,438 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,439 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,440 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,441 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,442 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,445 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,446 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,448 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,449 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,450 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,451 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,452 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,457 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,458 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,462 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,463 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,464 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,465 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,467 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,468 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,470 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,471 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,472 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,474 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,475 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,476 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,482 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,483 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,484 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,486 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,487 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,489 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,491 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,492 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,494 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,496 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,497 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,498 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,499 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,501 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,506 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,507 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,508 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,509 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,513 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,514 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,515 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,516 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,517 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,518 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,519 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,520 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,522 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,523 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,529 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,531 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,532 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,533 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,535 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,537 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,538 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,539 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,540 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,541 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,542 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,544 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,546 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,548 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,551 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,553 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,554 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,555 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,556 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,558 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,561 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,562 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,564 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,565 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,566 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,567 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,568 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,569 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,573 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,574 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,576 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,577 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,578 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,580 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,581 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,582 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,584 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,585 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,586 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,587 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,588 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,589 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,593 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,595 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,596 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,597 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,599 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,600 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,601 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,602 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,603 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,604 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,606 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,607 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,608 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,609 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,613 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,615 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,616 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,617 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,618 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,619 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,620 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,621 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,622 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,624 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,625 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,626 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,628 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,629 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,633 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,634 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,635 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,637 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,638 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,639 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,640 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,641 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,642 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,644 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,646 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,648 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,649 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,650 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,653 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,655 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,656 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,657 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,658 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,660 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,661 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,663 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,664 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,665 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,666 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,668 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,669 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,670 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,673 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,675 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,676 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,678 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,679 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,680 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,681 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,682 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,683 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,684 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,685 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,686 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,688 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,689 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,694 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,695 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,697 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,698 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,699 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,700 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,701 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,702 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,703 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,704 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,705 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,706 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,708 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:03,710 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,137 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,139 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,140 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,142 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,143 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,145 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,146 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,147 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,148 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,149 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,150 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,152 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,153 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,155 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,159 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,161 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,164 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,165 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,166 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,167 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,168 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,169 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,170 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,171 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,172 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,173 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,175 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,177 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,182 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,183 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,184 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,186 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,187 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,189 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,190 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,191 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,193 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,194 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,196 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,197 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,199 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,200 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,204 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,205 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,206 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,207 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,210 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,212 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,213 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,214 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,215 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,216 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,217 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,218 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,219 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,221 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,225 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,227 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,229 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,230 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,232 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,234 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,235 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,236 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,237 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,238 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,239 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,240 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,241 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,242 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,247 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,249 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,250 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,251 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,252 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,253 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,254 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,255 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,256 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,257 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,259 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,261 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,262 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,263 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,268 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,270 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,271 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,272 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,273 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,274 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,275 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,277 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,279 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,281 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,282 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,283 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,284 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,285 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,289 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,290 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,292 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,293 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,294 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,295 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,297 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,298 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,299 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,300 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,301 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,302 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,304 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,305 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,309 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,311 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,313 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,314 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,315 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,316 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,317 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,318 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,319 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,321 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,323 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,324 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,326 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,327 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,333 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,334 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,335 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,336 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,337 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,338 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,339 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,340 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,341 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,343 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,346 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,347 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,348 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,349 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,353 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,354 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,356 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,357 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,359 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,360 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,362 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,363 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,364 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,365 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,367 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,369 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,370 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,371 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,374 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,376 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,378 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,380 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,381 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,382 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,383 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,384 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,385 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,386 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,387 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,389 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,391 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,392 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,397 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,398 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,400 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,401 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,403 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,404 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,405 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,406 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,407 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,408 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,409 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,411 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,413 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,415 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,639 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,645 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,652 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,656 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,663 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,669 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,676 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,682 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,688 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,695 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,701 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,708 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,714 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,721 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,727 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,738 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,740 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,745 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,752 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,758 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,763 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,770 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,776 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,782 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,789 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,795 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,802 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,808 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,814 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,822 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,826 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,828 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,831 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,835 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,838 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,842 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,847 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,852 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,856 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,861 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,865 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,869 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,874 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,886 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,893 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,897 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,900 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,907 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,914 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,921 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,929 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,936 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,943 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,950 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,958 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,965 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,972 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,984 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,991 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:04,996 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,003 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,006 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,013 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,020 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,027 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,035 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,042 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,049 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,056 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,064 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,071 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,083 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,090 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,095 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,102 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,110 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,112 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,119 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,127 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,134 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,141 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,149 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,156 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,163 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,171 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,182 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,189 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,194 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,201 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,207 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,214 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,217 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,224 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,231 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,238 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,245 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,252 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,259 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,265 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,277 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,284 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,289 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,296 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,304 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,312 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,319 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,321 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,328 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,336 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,343 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,350 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,357 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,364 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,377 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,384 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,388 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,395 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,402 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,410 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,417 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,424 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,427 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,434 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,441 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,449 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,455 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,462 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,475 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,482 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,486 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,493 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,500 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,506 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,514 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,520 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,527 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,530 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,537 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,543 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,551 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,557 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,568 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,576 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,579 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,586 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,593 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,599 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,605 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,612 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,619 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,625 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,628 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,635 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,642 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,648 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,658 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,665 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,669 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,676 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,683 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,689 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,696 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,703 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,710 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,717 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,724 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,726 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,733 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,740 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,751 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,758 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,761 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,768 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,775 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,782 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,788 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,795 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,801 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,809 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,816 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,823 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:33:05,826 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:24,965 [8039] DEBUG    matplotlib.colorbar:871: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x7fd39647c370>
2023-02-27 15:36:25,039 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:25,144 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:25,213 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:25,314 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:25,419 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,505 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,509 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,509 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,510 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,511 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,511 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,512 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,513 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,514 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,515 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,515 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,516 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,517 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,517 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,518 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,523 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,525 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,526 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,526 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,527 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,527 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,528 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,529 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,530 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,530 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,532 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,533 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,534 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,535 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,540 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,541 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,543 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,543 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,544 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,545 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,546 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,547 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,548 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,549 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,550 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,550 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,551 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,551 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,556 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,557 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,558 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,560 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,561 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,563 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,564 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,564 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,565 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,566 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,566 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,567 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,568 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,568 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,573 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,574 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,575 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,576 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,578 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,580 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,581 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,582 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,583 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,583 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,584 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,585 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,585 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,586 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,589 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,590 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,591 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,592 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,593 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,595 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,596 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,597 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,597 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,598 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,599 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,599 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,600 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,601 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,605 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,605 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,606 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,607 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,608 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,609 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,611 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,612 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,613 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,613 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,614 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,615 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,616 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,616 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,621 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,622 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,622 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,623 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,624 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,625 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,627 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,629 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,630 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,631 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,631 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,632 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,632 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,633 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,637 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,638 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,638 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,639 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,640 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,641 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,642 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,643 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,645 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,646 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,647 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,648 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,649 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,649 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,653 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,654 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,655 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,655 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,656 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,657 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,658 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,659 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,660 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,662 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,663 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,664 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,664 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,665 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,669 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,670 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,670 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,671 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,672 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,672 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,673 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,674 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,675 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,676 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,677 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,678 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,679 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,680 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,683 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,684 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,685 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,685 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,686 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,687 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,687 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,688 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,688 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,689 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,690 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,692 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,693 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,694 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,698 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,699 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,699 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,700 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,701 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,701 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,702 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,703 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,703 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,704 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,704 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,705 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,707 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,860 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,863 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,864 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,865 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,866 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,867 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,868 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,869 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,870 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,871 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,872 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,873 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,875 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,877 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,882 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,884 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,885 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,887 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,888 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,889 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,890 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,892 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,893 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,894 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,896 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,897 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,898 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,899 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,903 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,904 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,905 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,907 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,909 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,910 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,912 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,913 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,914 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,915 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,916 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,917 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,918 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,920 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,925 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,926 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,928 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,929 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,931 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,932 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,933 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,934 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,935 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,936 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,937 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,938 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,939 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,940 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,945 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,947 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,948 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,949 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,950 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,952 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,953 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,954 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,955 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,956 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,958 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,959 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,961 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,962 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,966 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,967 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,969 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,970 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,971 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,972 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,974 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,975 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,977 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,978 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,979 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,980 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,981 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,982 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,986 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,987 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,989 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,990 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,991 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,992 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,994 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,996 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,997 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:43,999 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,000 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,001 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,002 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,003 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,006 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,008 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,009 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,010 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,012 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,013 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,014 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,016 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,017 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,018 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,019 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,020 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,021 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,023 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,027 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,029 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,030 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,031 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,032 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,033 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,034 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,035 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,036 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,038 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,039 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,040 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,042 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,043 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,048 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,049 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,050 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,051 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,052 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,053 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,054 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,055 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,056 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,058 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,060 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,061 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,062 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,064 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,068 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,069 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,070 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,071 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,072 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,073 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,075 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,076 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,077 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,079 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,080 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,082 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,083 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,084 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,087 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,089 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,090 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,091 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,093 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,094 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,095 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,096 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,098 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,099 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,100 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,101 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,103 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,104 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,108 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,109 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,111 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,112 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,113 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,114 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,116 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,117 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,118 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,119 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,120 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,121 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,122 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,123 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,536 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,537 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,538 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,539 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,541 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,542 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,543 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,544 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,546 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,547 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,548 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,549 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,550 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,551 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,555 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,556 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,559 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,560 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,562 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,564 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,565 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,566 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,567 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,568 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,569 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,570 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,571 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,572 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,577 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,578 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,580 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,581 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,582 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,583 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,584 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,585 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,586 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,587 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,588 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,589 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,590 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,592 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,596 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,598 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,599 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,600 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,601 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,602 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,603 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,604 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,605 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,606 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,608 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,609 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,611 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,612 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,616 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,617 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,618 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,619 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,620 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,622 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,623 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,624 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,625 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,626 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,628 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,629 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,630 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,631 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,635 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,636 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,637 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,638 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,639 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,640 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,642 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,643 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,644 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,646 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,647 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,648 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,649 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,650 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,654 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,655 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,656 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,657 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,658 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,660 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,661 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,663 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,664 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,665 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,666 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,667 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,668 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,669 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,672 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,674 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,675 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,676 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,678 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,679 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,680 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,681 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,683 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,684 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,685 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,686 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,687 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,688 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,692 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,693 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,695 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,696 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,697 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,698 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,699 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,700 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,701 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,702 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,703 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,704 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,705 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,706 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,711 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,713 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,714 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,715 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,716 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,717 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,718 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,719 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,720 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,721 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,722 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,723 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,724 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,726 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,731 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,732 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,733 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,734 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,735 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,736 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,737 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,738 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,739 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,740 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,742 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,743 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,744 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,746 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,749 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,751 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,752 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,753 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,754 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,755 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,756 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,757 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,758 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,759 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,761 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,762 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,764 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,765 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,768 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,769 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,770 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,771 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,772 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,773 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,775 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,776 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,777 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,779 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,780 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,781 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,782 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,783 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:44,995 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,000 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,007 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,013 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,020 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,027 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,035 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,042 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,049 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,055 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,062 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,069 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,076 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,082 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,089 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,100 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,102 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,106 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,113 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,119 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,126 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,132 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,138 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,145 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,152 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,159 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,166 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,173 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,180 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,188 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,192 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,195 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,199 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,204 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,208 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,212 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,217 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,221 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,224 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,229 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,233 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,238 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,241 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,253 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,260 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,264 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,266 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,272 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,278 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,284 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,290 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,296 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,301 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,307 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,313 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,319 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,324 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,334 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,339 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,343 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,350 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,352 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,357 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,364 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,371 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,378 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,385 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,391 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,398 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,404 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,411 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,422 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,429 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,433 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,439 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,446 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,449 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,456 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,463 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,470 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,476 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,483 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,490 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,497 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,503 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,514 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,521 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,525 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,531 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,537 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,544 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,547 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,553 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,560 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,567 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,573 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,580 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,587 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,593 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,606 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,614 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,618 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,625 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,632 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,639 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,646 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,649 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,655 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,662 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,670 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,676 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,683 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,690 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,700 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,707 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,712 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,718 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,725 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,732 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,739 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,746 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,748 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,755 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,762 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,769 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,775 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,782 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,794 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,800 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,804 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,811 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,818 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,825 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,831 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,838 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,845 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,848 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,855 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,861 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,868 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,875 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,886 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,893 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,897 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,904 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,910 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,917 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,923 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,930 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,937 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,943 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,946 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,952 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,959 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,965 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,976 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,983 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,988 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:45,994 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,001 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,008 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,014 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,022 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,029 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,035 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,042 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,044 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,051 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,058 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,069 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,075 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,080 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,087 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,093 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,100 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,107 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,114 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,122 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,128 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,135 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,143 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,145 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,533 [8039] DEBUG    matplotlib.colorbar:871: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x7fd398435580>
2023-02-27 15:36:46,600 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,700 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,772 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,872 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:36:46,977 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,184 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,188 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,189 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,190 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,190 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,191 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,191 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,192 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,193 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,194 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,195 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,196 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,200 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,202 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,203 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,204 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,204 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,205 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,205 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,206 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,207 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,207 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,208 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,213 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,214 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,215 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,216 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,216 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,217 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,218 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,218 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,219 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,220 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,220 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,224 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,225 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,225 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,228 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,229 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,230 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,231 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,232 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,232 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,233 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,234 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,237 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,238 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,239 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,239 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,241 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,242 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,242 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,244 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,246 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,247 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,247 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,251 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,252 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,253 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,254 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,254 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,257 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,258 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,259 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,260 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,262 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,263 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,267 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,268 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,269 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,270 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,270 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,271 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,272 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,273 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,274 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,274 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,275 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,281 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,281 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,282 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,283 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,283 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,284 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,285 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,286 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,287 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,287 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,288 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,293 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,295 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,296 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,297 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,297 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,298 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,299 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,299 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,302 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,303 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,304 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,307 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,308 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,308 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,309 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,310 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,311 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,313 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,313 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,314 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,316 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,451 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,453 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,454 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,455 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,456 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,457 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,458 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,460 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,462 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,463 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,485 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,490 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,493 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,497 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,498 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,500 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,501 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,503 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,504 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,505 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,506 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,508 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,512 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,513 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,514 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,516 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,517 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,518 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,519 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,520 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,521 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,522 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,523 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,526 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,528 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,529 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,530 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,532 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,533 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,534 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,535 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,536 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,537 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,538 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,541 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,542 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,543 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,545 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,546 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,548 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,549 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,550 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,551 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,552 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,553 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,556 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,558 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,559 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,561 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,562 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,564 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,566 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,567 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,568 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,569 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,571 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,574 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,576 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,577 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,578 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,580 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,583 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,584 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,586 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,587 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,588 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,589 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,592 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,594 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,596 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,598 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,599 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,600 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,601 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,602 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,605 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,606 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,608 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,611 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,613 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,614 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,616 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,617 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,618 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,619 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,620 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,621 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,623 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,624 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,627 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,628 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,630 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,631 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,632 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,634 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,635 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,636 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,637 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,638 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,639 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,915 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,917 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,918 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,920 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,921 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,922 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,923 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,924 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,925 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,926 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,928 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,932 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,934 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,935 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,936 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,937 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,938 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,939 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,940 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,941 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,943 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,945 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,949 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,950 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,951 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,953 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,955 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,956 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,957 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,958 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,959 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,960 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,962 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,967 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,968 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,969 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,970 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,971 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,972 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,973 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,974 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,976 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,978 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,979 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,983 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,984 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,985 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,987 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,988 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,990 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,991 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,992 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,993 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,994 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:11,996 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,000 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,002 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,003 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,004 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,005 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,006 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,007 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,008 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,010 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,011 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,012 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,016 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,017 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,018 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,019 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,021 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,022 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,024 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,025 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,026 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,027 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,029 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,034 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,035 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,036 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,037 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,038 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,039 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,040 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,041 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,044 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,045 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,047 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,050 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,051 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,052 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,054 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,055 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,057 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,058 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,059 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,060 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,062 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,063 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,068 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,069 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,070 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,071 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,072 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,073 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,074 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,075 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,077 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,079 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,080 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,232 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,237 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,244 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,249 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,255 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,262 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,269 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,275 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,282 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,288 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,294 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,301 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,339 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,342 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,347 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,354 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,361 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,368 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,375 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,382 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,389 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,396 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,403 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,412 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,416 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,419 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,422 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,427 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,431 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,435 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,439 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,443 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,447 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,452 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,463 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,469 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,473 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,475 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,481 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,487 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,494 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,499 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,505 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,511 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,517 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,526 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,532 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,535 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,541 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,543 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,548 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,554 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,560 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,567 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,574 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,580 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,592 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,598 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,602 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,609 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,615 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,617 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,624 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,631 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,637 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,644 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,650 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,662 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,669 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,673 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,679 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,686 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,693 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,695 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,702 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,709 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,716 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,722 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,734 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,741 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,745 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,752 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,758 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,765 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,771 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,774 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,780 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,787 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,794 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,805 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,811 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,815 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,822 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,829 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,835 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,842 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,848 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,851 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,857 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,864 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,874 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,881 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,885 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,892 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,899 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,905 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,912 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,919 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,926 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:12,928 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:13,248 [8039] DEBUG    matplotlib.colorbar:871: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x7fd3b3d9e490>
2023-02-27 15:37:13,304 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:13,376 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:13,428 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:13,503 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:37:13,577 [8039] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:40:35,158 [8370] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-02-27 15:40:35,158 [8370] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-02-27 15:40:35,158 [8370] INFO     root:247: [JupyterRequire] Initializing comms.
2023-02-27 15:40:35,161 [8370] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-02-27 15:40:35,161 [8370] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-02-27 15:40:35,162 [8370] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-02-27 15:42:19,308 [8370] DEBUG    matplotlib.colorbar:871: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x7f7a544ac3d0>
2023-02-27 15:42:19,357 [8370] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:42:19,416 [8370] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:42:19,455 [8370] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:42:19,499 [8370] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:42:19,555 [8370] DEBUG    matplotlib.axes._base:3003: [JupyterRequire] top of Axes not in the figure, so title not moved
2023-02-27 15:52:22,481 [8566] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-02-27 15:52:22,481 [8566] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-02-27 15:52:22,481 [8566] INFO     root:247: [JupyterRequire] Initializing comms.
2023-02-27 15:52:22,484 [8566] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-02-27 15:52:22,485 [8566] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-02-27 15:52:22,485 [8566] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-02-27 16:41:44,985 [9700] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-02-27 16:41:44,986 [9700] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-02-27 16:41:44,986 [9700] INFO     root:247: [JupyterRequire] Initializing comms.
2023-02-27 16:41:44,988 [9700] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-02-27 16:41:44,989 [9700] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-02-27 16:41:44,989 [9700] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-02-27 16:44:23,339 [9751] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-02-27 16:44:23,340 [9751] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-02-27 16:44:23,340 [9751] INFO     root:247: [JupyterRequire] Initializing comms.
2023-02-27 16:44:23,342 [9751] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-02-27 16:44:23,342 [9751] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-02-27 16:44:23,343 [9751] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-02-27 17:11:56,231 [10278] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-02-27 17:11:56,232 [10278] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-02-27 17:11:56,232 [10278] INFO     root:247: [JupyterRequire] Initializing comms.
2023-02-27 17:11:56,234 [10278] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-02-27 17:11:56,234 [10278] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-02-27 17:11:56,235 [10278] DEBUG    root:97: [JupyterRequire] Registering comm targets.
